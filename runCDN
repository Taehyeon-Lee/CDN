#!/bin/bash

# ./runCDN -p 20030 -o cs5700cdnorigin.ccs.neu.edu:8080 -n cs5700cdn.example.com -u promised_lan -i ~/.ssh/id_ed25519.pub


# Define the options and their arguments
while getopts ":p:o:n:u:i:" opt; do
  case $opt in
    p)
      port="$OPTARG"
      ;;
    o)
      origin="$OPTARG"
      ;;
    n)
      name="$OPTARG"
      ;;
    u)
      username="$OPTARG"
      ;;
    i)
      keyfile="$OPTARG"
      ;;
    \?) # invalid option is encountered
      # an error message is printed and the script exits with a non-zero status code
      echo "Invalid option: -$OPTARG" >&2
      echo 'Run with: "./runCDN -p <port number> -o <origin server name> -n <CDN domain name> -u <username> -i <path to public key>"'
      exit 1
      ;;
    :) # When an option requires an argument but none is provided
      # an error message is printed and the script exits with a non-zero status code
      echo "Option -$OPTARG requires an argument." >&2
      echo 'Run with: "./runCDN -p <port number> -o <origin server name> -n <CDN domain name> -u <username> -i <path to public key>"'
      exit 1
      ;;
  esac
done

# Process the options and their arguments
echo "port = $port"
echo "origin = $origin"
echo "name = $name"
echo "username = $username"
echo "keyfile = $keyfile"


###################### login into the cloud server #########################
echo "[+] Starting dnsserver now..."
ssh -f -i $keyfile $username@cdn-dns.5700.network "nohup ./get_replica_geo &"
ssh -f -i $keyfile $username@cdn-dns.5700.network "nohup ./dnsserver -p $port -n $name &"

echo "[+] Starting httpservers now..."

ssh -f -i $keyfile $username@cdn-http1.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http3.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http5.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http7.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http2.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http6.5700.network "nohup ./httpserver -p $port -o $origin &"
ssh -f -i $keyfile $username@cdn-http4.5700.network "nohup ./httpserver -p $port -o $origin &"

sleep 30

echo "[+] HTTP and DNS servers are ready!"

exit
